# This workflow will build and push an application to a Azure Kubernetes Service (AKS) cluster when you push your code
#
# This workflow assumes you have already created the target AKS cluster
#
# To configure this workflow:
# 1. Set the following secrets in your repository:	
#    - KUBE_CONFIG	
#    - PG_USER
#    - PG_PASSWORD
#    - PG_DATABASE
#
# 2. Choose the appropriate render engine for the bake step https://github.com/Azure/k8s-bake. The config below assumes Helm.
#    Set your helmChart, overrideFiles, and helm-version to suit your configuration.
#    - CHART_PATH (path to your helm chart)
#    - CHART_OVERRIDE_PATH (path to your helm chart with override values)
#    - HELM_VERSION

name: Build and deploy an app to AKS with Helm

on:
  push:
    branches: ["master"]
    
env:

  CHART_PATH: "."
  HELM_VERSION: "latest"

jobs:
  helm:
    name: Helm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@main
        
      - name: Set k8s context
        uses: Azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Setting up the namespace
        run: |
          kubectl create namespace ${{ github.ref_name }}
      
#       - name: Lint chart
#         run: helm lint ${{ env.CHART_PATH }}
#         working-directory: ${{ env.CHART_PATH }}
          
      - name: Install Helm chart
        uses: azure/k8s-bake@v2
        with:
          renderEngine: 'helm'
          helmChart: ${{ env.CHART_PATH }}
          helm-version: ${{ env.HELM_VERSION }}
          releaseName: ${{ github.ref_name }}
          namespace: ${{ github.ref_name }}
          overrides: |
            odooDB.credentials.user:${{ secrets.PG_USER }}
            odooDB.credentials.password:${{ secrets.PG_PASSWORD }}
            odooDB.credentials.database:${{ secrets.PG_DATABASE }}  
          arguments: ""
        id: bake

      - name: Deploying Halm chart
        uses: Azure/k8s-deploy@v4
        with:
          namespace: ${{ github.ref_name }}
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
