# This workflow will build and push an application to a Azure Kubernetes Service (AKS) cluster when you push your code
#
# This workflow assumes you have already created the target AKS cluster
#
# To configure this workflow:
# 1. Set the following secrets in your repository:
#    - KUBE_CONFIG
#    - PG_USER
#    - PG_PASSWORD
#    - PG_DATABASE
#
# 2. Set the following environmental variables to adjust your configuration:
#    - CHART_PATH (path to your helm chart)
#    - HELM_VERSION
#    - DOMAIN_NAME

name: AKS Helm chart deployment

on:
  push:
    branches: ["master"]

env:
  CHART_PATH: "."
  HELM_VERSION: "latest"
  DOMAIN_HOST: "viacheslav-semushin.com" # For the IP form, use nip.io postfix: "x.x.x.x.nip.io"

jobs:
  deploy:
    name: Helm deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@main

      - name: Set k8s context
        uses: Azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      - name: Setting up the namespace
        run: |
          kubectl create namespace ${{ github.ref_name }} --dry-run=client -o yaml | kubectl apply -f -

      - name: Install Helm chart
        uses: azure/k8s-bake@v2
        with:
          renderEngine: "helm"
          helmChart: ${{ env.CHART_PATH }}
          helm-version: ${{ env.HELM_VERSION }}
          releaseName: ${{ github.ref_name }}
          namespace: ${{ github.ref_name }}
          overrides: |
            odooDB.credentials.user:${{ secrets.PG_USER }}
            odooDB.credentials.password:${{ secrets.PG_PASSWORD }}
            odooDB.credentials.database:${{ secrets.PG_DATABASE }}
        id: bake

      - name: Deploying Halm chart
        uses: Azure/k8s-deploy@v4
        with:
          namespace: ${{ github.ref_name }}
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
